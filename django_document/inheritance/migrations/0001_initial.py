# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-11 09:08
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('champion_type', models.CharField(choices=[('magician', '마법사'), ('supporter', '서포터'), ('ad', '원거리 딜러')], max_length=20)),
                ('rank', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': '챔피언',
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='ABC', max_length=50)),
                ('address', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('age', models.PositiveIntegerField()),
                ('home_group', models.CharField(max_length=5)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inheritance_student_set', to='inheritance.School')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('age', models.PositiveIntegerField()),
                ('subject', models.CharField(max_length=30)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inheritance_teacher_set', to='inheritance.School')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('place_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inheritance.Place')),
                ('serves_hot_dogs', models.BooleanField(default=False)),
                ('serves_pizza', models.BooleanField(default=False)),
            ],
            bases=('inheritance.place',),
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('place_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inheritance.Place')),
                ('customers', models.ManyToManyField(related_name='providers', related_query_name='provider', to='inheritance.Place')),
            ],
            bases=('inheritance.place',),
        ),
        migrations.CreateModel(
            name='Midliner',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('inheritance.champion',),
        ),
        migrations.CreateModel(
            name='Supporter',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('inheritance.champion',),
        ),
    ]
